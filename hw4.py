# -*- coding: utf-8 -*-
"""hw4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w1qMeYO-uDmLLGnU6VysYcNcDOcXu8Kd
"""

def display_info():
    title = "To Kill a Mockingbird"
    author = "Harper Lee"
    description = ("Set in the American South during the 1930s, 'To Kill a Mockingbird' "
                   "explores themes of racial injustice, moral growth, and compassion "
                   "through the eyes of Scout Finch, a young girl whose father, Atticus, "
                   "is a lawyer defending a black man accused of raping a white woman.")

    print("Book Title:", title)
    print("Author:", author)
    print("Description:", description)

# Call the function to display the book information
display_info()

def london_attractions():
    print("Top Attractions in London:")
    attractions = [
        "1. The British Museum",
        "2. The Tower of London",
        "3. Buckingham Palace"
    ]
    for attraction in attractions:
        print(attraction)
    print()  # Add a blank line for better readability


def paris_attractions():
    print("Top Attractions in Paris:")
    attractions = [
        "1. The Eiffel Tower",
        "2. The Louvre Museum",
        "3. Notre-Dame Cathedral"
    ]
    for attraction in attractions:
        print(attraction)
    print()  # Add a blank line for better readability


def new_york_attractions():
    print("Top Attractions in New York:")
    attractions = [
        "1. Statue of Liberty",
        "2. Central Park",
        "3. The Metropolitan Museum of Art"
    ]
    for attraction in attractions:
        print(attraction)
    print()  # Add a blank line for better readability


# Call the functions to display attractions for each city
london_attractions()
paris_attractions()
new_york_attractions()

import turtle

# Function to draw a square with a fixed side length
def draw_square():
    side_length = 100  # Fixed side length
    for _ in range(4):
        turtle.forward(side_length)  # Move forward by side_length
        turtle.right(90)              # Turn right by 90 degrees

# Set up the turtle
turtle.speed(1)  # Set the drawing speed

# Draw the first square
draw_square()

# Move to a new position for the second square
turtle.penup()  # Lift the pen to move without drawing
turtle.goto(150, 0)  # Move to a new position
turtle.pendown()  # Put the pen down to start drawing

# Draw the second square
draw_square()

# Move to a new position for the third square
turtle.penup()
turtle.goto(300, 0)  # Move to a new position
turtle.pendown()

# Draw the third square
draw_square()

# Finish drawing
turtle.done()  # Keep the window open

def find_even_numbers():
    even_numbers = []  # Initialize an empty list to store even numbers
    for num in range(0, 11):  # Loop from 0 to 10
        if num % 2 == 0:  # Check if the number is even
            even_numbers.append(num)  # Add the even number to the list
    print("Even numbers between 0 and 10:", even_numbers)  # Print the list of even numbers

# Call the function to display the even numbers
find_even_numbers()